{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"contributing/","title":"Contribute","text":"<p>Thank you for your interest in contributing to Mi Create! </p>"},{"location":"contributing/#translations","title":"Translations","text":"<p>Note</p> <p>You can view a list of language codes at https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes</p> <p>Currently, translations are done using GNU's gettext standard. To edit existing translations, clone the repository, open the locales folder in src/locales, open your locale's folder &gt; LC_MESSAGES and edit using a program like Poedit:</p> <ul> <li>main.po - Strings in main.py</li> <li>properties.po - Strings in properties</li> <li>window.po - Strings in precompiled window</li> </ul> <p>To create a translation entry, create a folder with your language code (you could name this folder anything but to keep standards please name it to a language code). In the folder, create a CONFIG.ini file. This file contains the configuration details of your language:</p> <pre><code>[config]  \nlanguage = Language Name  \nauthorMessage = Comment  \ncontact = Contact Details  \n</code></pre> <p>Once config files have been created, using a program like Poedit, create your translation files from the pot files in /locales.</p>"},{"location":"contributing/#funding","title":"Funding","text":"<p>I am not accepting donations for Mi Create. Treat the project as a community effort.</p>"},{"location":"customization/","title":"Customization","text":"<p>Mi Create has a very modular theming system, allowing for custom but powerful themes to be created.</p>"},{"location":"customization/#theme-components","title":"Theme Components","text":"<p>A theme consists of 3 things:</p> <ul> <li>Icons</li> <li>Stylesheet</li> <li>Color Schemes</li> </ul>"},{"location":"customization/#icons","title":"Icons","text":"<p>Icons use the Free Desktop icon theme specification (https://specifications.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html). View the default icon theme for an example.</p>"},{"location":"customization/#stylesheets","title":"Stylesheets","text":"<p>Mi Create uses Qt. Stylesheets are one of the ways frames, buttons, etc are styled in the application.</p> <p>Qt Style Sheets have similar syntax to CSS. If you already know CSS, theming Mi Create through stylesheets will be a breeze.</p> <p>Style sheets operate on rules known as \"style rules\". Style rules are defined through a QWidget name (e.g QLineEdit, QPushButton) and curly braces <code>{}</code>. Style rules can modify different attributes about the widget, background color, border, etc. </p> <p>For example:</p> <pre><code>QGroupBox {\n  background-color: palette(alternate-base);\n  border: 1px solid palette(midlight);\n  margin-top: 25px;\n}\n</code></pre> <p>Where QGroupBox is the QWidget, background-color is the attribute and the value is set to a QPalette value \"alternate-base\".</p> <p>You may read more on how stylesheets work at:</p> <ul> <li>https://doc.qt.io/qt-6/stylesheet.html </li> <li>https://doc.qt.io/qt-6/stylesheet-reference.html</li> </ul>"},{"location":"customization/#color-schemes","title":"Color Schemes","text":"<p>Color Schemes are defined by colorSchemes.json. The name of the scheme is a key and contained are 2 ColorGroups: </p> <ul> <li>Base</li> <li>Disabled</li> </ul> <p>In the respective ColorGroup, are a list of QPalette ColorRoles, listed at https://doc.qt.io/qt-6/qpalette.html#ColorRole-enum</p>"},{"location":"quickstart/intro/","title":"Introduction","text":"<p>Introduction to Mi Create</p>"},{"location":"quickstart/intro/#introduction_1","title":"Introduction","text":"<p>Mi Create is a watchface creation tool. It is a graphical program for creating and editing custom watchfaces on Xiaomi wearables.</p> <p>Widgets are the components of your watchface, things like images, analog hands, digital numbers, etc. The Canvas is the part of the program where your watchface is previewed and editable. Building is the act of compiling your watchface project into a format thats readable by the watch.</p>"},{"location":"quickstart/intro/#welcome-page","title":"Welcome page","text":"<p>When starting Mi Create, you will see the Welcome page. The dialog also shows when all projects are closed.</p> <p>A list of recent projects will appear on the right hand side.</p> <p></p>"},{"location":"quickstart/intro/#configure-mi-create","title":"Configure Mi Create","text":"<p>Click the Gear icon in the Welcome Page to configure Mi Create's settings.</p> <p>Alternatively when a project is open you can click Edit &gt; Settings or Ctrl+, to access the settings page</p> <p></p> <p>If the program is slow when adding and moving widgets, you may like to tweak a few settings in here to help with performance:</p> <ul> <li>Clip to Device Shape enables rounding the corners of the canvas to the corner radius of the watch. This can make the canvas lag. If this is not enabled, the classic rounded white outline from EasyFace which defines the bounds of the watchface will be shown instead.</li> <li>Antialiasing helps hide jagged lines present when drawing non-straight objects. Antialiasing is usually unnecessary because it only applies to vector objects in the canvas, such as progress arc borders. Disabling this may help with performance slighly.</li> <li>Image Interpolation is the way zoomed in images are handled. By default, this is set to Bilinear which \"blurs\" neighbouring pixels to make it look smoother. Nearest neighbour however preserves the pixels making things look more pixelated. Below is the difference between bilinear and nearest neighbour, where nearest neighbour is pictured on the left and bilinear is on the right:</li> </ul> <p></p> <p>Artwork from https://www.deviantart.com/gelik1html/art/HSR-Render-Silver-Wolf-Chibi-1011345132</p>"},{"location":"quickstart/intro/#create-a-watchface-project","title":"Create a watchface project","text":"<p>Watchfaces are done in projects, which hold images and information about the watchface.</p> <p>There are 2 implemented project formats in Mi Create:</p> <ul> <li>.fprj (EasyFace/m0tral)</li> <li>wfDef.json (GMF)</li> </ul> <p>Click  the New Project button in the Welcome Page to open the New Project page.</p> <p>Alternatively when a project is open you can click File &gt; New... or Ctrl+N to access the new project page</p> <p></p> <p>Select the device you want to make your watchface for in the Select device dropdown, name your project and set where the project will be created.</p> <p>Tip</p> <p>The project name will not be the name the watch will show. You may set the project name to something simple and then set the full name of the watchface in the Manage Project dialog.</p>"},{"location":"quickstart/intro/#watchface-editor","title":"Watchface editor","text":"<ol> <li>The Menu bar contains a set of menus:<ul> <li>Logo menu allows you to access documentation, welcome page, about information and exiting Mi Create</li> <li>File menu contains tools to create or close projects and edit project info</li> <li>Edit menu edits widgets in the current project, or access Mi Create settings</li> <li>Create menu creates widgets in the current project</li> <li>View menu shows or hides toolbars/dock widgets and has window actions</li> <li>Build menu contains tools to build a project</li> </ul> </li> <li>Toolbar contains a set of actions to manipulate a project</li> <li>Project tabs allow you to open multiple projects at once and access them</li> <li>Resources panel shows a list of searchable resources and allows you to add resources</li> <li>Canvas shows an interactive watchface preview</li> <li>Explorer shows the list of widgets in the project</li> <li>Properties shows all properties of a widget</li> </ol>"},{"location":"quickstart/intro/#using-the-canvas","title":"Using the canvas","text":"<p>The canvas displays an editable preview of your watchface. </p> <p>Zoom in and out of the canvas by clicking in the canvas and pressing Ctrl++ / Ctrl+-. Alternatively, you can hold Ctrl and scroll your mouse wheel, or simply pressing the  Zoom In and  Zoom Out buttons on the toolbar.</p> <p>Delete a widget by pressing the Del key</p>"},{"location":"quickstart/intro/#adding-and-configuring-widgets","title":"Adding and configuring widgets","text":"<p>To create a widget, press the  create button on the top left and select a widget on the dropdown that appears. It will be created to the center of the watchface. </p> <p></p> <p>Alternatively to add an image widget quickly you can drag and drop the widget from the resources panel to the canvas.</p> <p>Once the widget has been created and selected, head over to the Properties panel to modify the position and appearance of the widget.</p> <p></p> <p>Note</p> <p>Xiaomi wearables are by all means not powerful devices compared to proper smartwatches like Apple Watches and Wear OS Watches, so there are some things you might need to take into consideration when designing your watchface:</p> <ul> <li>Attempt to use the least amount of storage on your watchface. Xiaomi watches usually don't have much storage for watchfaces. Big, colourful images take up a decent chunk of storage. Aim for watchfaces with &gt;5MB final file size, so that you save storage space on the watch and have faster transfer time from your phone to your watch.</li> <li>Try using as little widgets as possible. Do things like merge static images and icons as one single image widget.</li> <li>Use transparent images (_RGBA/RGBA32) sparingly especially on watches with no watchface compression. Transparent widgets take up way more storage than regular images.</li> <li>When creating animations, don't make them too big or use too many frames. Your watch most likely cannot handle full screen animations at 20-30fps, let alone 60. So, save some resources and make small, simple animations. Refrain from making full screen animations.</li> </ul>"},{"location":"quickstart/publishing/","title":"Publishing your Watchface","text":"<p>Publishing your watchface for others to see. This guide primarily focuses on m0tral's custom Mi Fitness mod and servers.</p>"},{"location":"quickstart/publishing/#prerequisites","title":"Prerequisites","text":"<p>This guide assumes that you are attempting to publish onto m0tral's servers. If you do not have access already to them, please follow the guide. If you are uploading your watchface on another service like AmazfitWatchFaces, please follow instructions there on how to upload a watchface.</p>"},{"location":"quickstart/publishing/#publishing","title":"Publishing","text":"<p>Before publishing your watchface for others to see, please follow the guide at https://ooflet.github.io/docs/quickstart/testing to upload your watchface onto testing servers if you have not done so already. Once everything is tested and ready, press the  Publish button on the left of your watchface listing to publish it to servers. Select categories by pressing the edit button.</p> <p>Tip</p> <p>Remember to check \"active\" to TRUE!</p> <p>Congratulations!  You have uploaded your watchface for everyone to see!</p>"},{"location":"quickstart/publishing/#monetisation","title":"Monetisation","text":"<p>Please contact @m0tral on Telegram if you wish to sell your watchface.</p>"},{"location":"quickstart/testing/","title":"Testing your Watchface","text":"<p>Test out your watchface. This guide primarily focuses on m0tral's custom Mi Fitness mod and servers.</p>"},{"location":"quickstart/testing/#prerequisites","title":"Prerequisites","text":"<p>There are many ways to transfer watchfaces to your watch. The recommended way is to gain access to @m0tral's watchface database and install your watchface through there. You may like to follow these steps in advance; they make take a while.</p> <p>Note</p> <p>The modded Mi Fitness app is only available on Android.</p> <p>To gain access to the servers:</p> <ol> <li> <p>Join the @mi_watch_int Telegram group. If you do not have the Telegram app, please install it and create an account. This is necessary for registration onto the servers. Open Telegram and join the Telegram group. </p> </li> <li> <p>Message @mi_watch_bot /latestapp to get the latest Mi Fitness mod app. Once joined, message @mi_watch_bot the command /latestapp to get a link to the latest Mi Fitness mod application. Install it and setup your watch as per usual.</p> </li> <li> <p>Message any group admin with your wearable's MAC address to gain access to the development servers Once you have the modified Mi Fitness app, all you need to do now is gain access to the development to upload your watchface. Message any group admin or @m0tral your wearable's MAC address for access to the development servers. You may also request an invitation to the Mi Watch Development Telegram group to gain access to a chat with experienced watchface developers if you have any further questions.</p> </li> </ol> <p>Tip</p> <p>If you are running Android &gt;13 and get the \"Restricted setting\" popup when giving permissions to the Mi Fitness mod, you will need to unlock application permissions.</p> <ol> <li>Open the apps list in settings (Settings &gt; Apps &gt; Show all apps/Settings &gt; Apps &gt; App Management) </li> <li>Choose Mi Fitness from the list</li> <li>Tap on the top right corner menu (3 dots)</li> <li>Select \"Allow restricted settings\"</li> </ol>"},{"location":"quickstart/testing/#testing-your-watchface_1","title":"Testing your Watchface","text":"<p>Warning</p> <p>You may brick your device testing out custom watchfaces. If your watch does not have  good recovery, you risk breaking your watch entirely. Some watches with known bad recovery/no recovery:</p> <ul> <li>Xiaomi Smart Band 8</li> <li>Xiaomi Watch S1 Pro</li> <li>Xiaomi Watch S3</li> <li>Redmi Watch 3</li> </ul> <p>However, watches that run NuttX (Xiaomi Vela/RW4 HyperOS) have really good recovery.  You do not need to worry about bricking your device unless you have messed with system software. The following devices run NuttX:</p> <ul> <li>Xiaomi Smart Band 8 Pro</li> <li>Redmi Watch 4</li> </ul> <p>There are some strategies to prevent bricking your watch, listed later on.</p> <p>Once you're ready to test out your watchface, you can build/compile it to a format that is readable by the watch. To build your watchface:</p> <ol> <li>In the toolbar, select the  build button</li> <li>In the popup that appears, fill the following fields:<ul> <li>Watchface name - The name of the watchface that appears in the watch</li> <li>Watchface thumbnail - The thumbnail of the watchface that appears in the watch</li> </ul> </li> <li>The watchface will be built using the data that is saved in the project files, not in the application. You can choose whether to:<ul> <li>Save - Save open project to file before building</li> <li>Discard - Dont save anything to file before building</li> </ul> </li> <li>Check build results for any errors.</li> </ol> <p>Your watchface binary will be in the output folder in your project.</p>"},{"location":"quickstart/testing/#debugging","title":"Debugging","text":"<p>There may have been some watchface errors that slipped through build errors. These errors may brick your device. A way to check for these errors is to unpack the watchface, if any errors occur from unpacking there may have been a bug in your watchface. Please report these bugs to the Mi Watch Development group on Telegram for further assistance.</p>"},{"location":"quickstart/testing/#transferring-to-your-watch","title":"Transferring to your watch","text":"<p>Note</p> <p>The .FACE file in your project's output folder is your watchface binary. Rename it to .bin if you are uploading to another service.</p> <p>If you have access to the @m0tral's development servers, access the admin panel at https://miwatch.conversmod.ru/micolor/facemain?YOUR-MAC-ADDRESS-HERE and upload your watchface on the bottom panel. You can apply it in Mi Fitness &gt; Watchfaces &gt; Categories &gt; Test RU </p>"},{"location":"widgets/image/","title":"Image","text":"<p>The Image widget is the most basic widget. It displays bitmap images</p>"},{"location":"widgets/image/#detailed-description","title":"Detailed Description","text":"<p>The Image widget displays images provided in the Image property. Width and Height are automatically set by the image.</p> <p>There are 2 RGB formats the image will use: RGB565 and RGBA32. These are selected through a postfix on the widget's name, either _RGB or _RGBA (e.g Image_RGBA).</p> <p>RGB565 has no alpha channel meaning no transparency support but smaller file size while RGBA32 has transparency but has a larger file size. Its good practice especially on older watches with no watchface compression to use RGB rather than RGBA if the image does not require transparency.</p>"},{"location":"widgets/image/#properties","title":"Properties","text":""},{"location":"widgets/image/#general","title":"General","text":"Name Widget name"},{"location":"widgets/image/#position","title":"Position","text":"X Horizontal position Y Vertical position Width (disabled) Widget width, automatically set by image Height (disabled) Widget height, automatically set by image"},{"location":"widgets/image/#appearance","title":"Appearance","text":"Opacity Widget transparency Visibility Trigger Display the widget based on the source's value Only visible on Xiaomi Watch Color/Sport/2/S1/S1 Pro/S2"},{"location":"widgets/image/#image_1","title":"Image","text":"Image The image to be displayed"},{"location":"widgets/number/","title":"Digital Number","text":"<p>The Digital Number widget displays numbers from the selected source.</p>"},{"location":"widgets/number/#detailed-description","title":"Detailed Description","text":"<p>The Digital Number widget displays numbers provided by the source. Width and Height are automatically set.</p> <p>Digital Numbers rely on data sources. If a source is not available in the program and you would like to have it added, first check the data source list to see if it is available as a source and request it through issues</p> <p>Note</p> <p>For Mi Band 7 Pro and Mi Band 8, to display hours, minutes and seconds each digit has to be its own number widget (Hour High, Hour Low, Minute High, Minute Low, etc). Each widget also needs a seperate list of images (however setting just the negative image to be different for each set works fine) otherwise it will display incorrectly.</p> <p></p> <p>You can set an angle by using the <code>_angle[x]</code> suffix on the name where x is the angle \u00d7 10. The alignment property sets the \"pivot point\" (what point the widget rotates on) where \"Left\" sets it to the top left, \"Center\" sets it to the top center and \"Right\" sets it to the top right.</p> <p></p> <p>You can also set an \"unit image\" (%, \u00b0, etc) by creating an image widget and adding the <code>_ref[widget]</code> suffix on the name where widget is the number widget you want to add the unit image onto.</p> <p></p> <p>Mi Create previews these parameters in the canvas.</p>"},{"location":"widgets/number/#properties","title":"Properties","text":""},{"location":"widgets/number/#general","title":"General","text":"Name Widget name"},{"location":"widgets/number/#position","title":"Position","text":"X Horizontal position Y Vertical position Width (disabled) Widget width, automatically set by image Height (disabled) Widget height, automatically set by image Alignment Alignment of the numbers"},{"location":"widgets/number/#appearance","title":"Appearance","text":"Opacity Widget transparency Digits Amount of digits to display Spacing Spacing between digits Hide Zeroes Hide leading zeroes in a number Visibility Trigger Display the widget based on the source's value Only visible on Xiaomi Watch Color/Sport/2/S1/S1 Pro/S2"},{"location":"widgets/number/#image","title":"Image","text":"Image The image to be displayed"}]}